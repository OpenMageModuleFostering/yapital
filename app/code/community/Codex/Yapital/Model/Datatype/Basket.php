<?php
/**
 * Defines the Basket datatype for the Yapital API
 *
 *
 * PHP version 5
 *
 *
 * @category   Datatype
 * @package    Codex_Yapital_Model_Datatype
 * @copyright  2013 Code-X GmbH
 * @link       http://code-x.de
 * @since      File available since Release 0.1.0
 */

/**
 * The Basket type specifies the details of the basket an its contents.
 *
 * Contains the data about the items in the basket, including the item price and other details.
 *
 * @category   Datatype
 * @package    Codex_Yapital_Model_Datatype
 * @copyright  2013 Code-X GmbH
 * @link       http://code-x.de
 * @since      Class available since Release 0.1.0
 */
class Codex_Yapital_Model_Datatype_Basket extends Codex_Yapital_Model_Datatype_Abstract
    implements Codex_Yapital_Model_Datatype_Interface
{

    /**
     * A unique public ID of a basket. Generated by Yapital.
     *
     * @var Codex_Yapital_Model_Datatype_YapitalPublicId
     */
    protected $_basketId = null;

    /**
     * The referenced transaction that is used during the ordering and purchasing process.
     *
     * @var Codex_Yapital_Model_Datatype_Transaction
     */
    protected $_transaction = null;

    /**
     * The customer's shipping address.
     *
     * @var Codex_Yapital_Model_Datatype_PostalAddress
     */
    protected $_shippingAddress = null;

    /**
     * The customer's billing address.
     *
     * @var Codex_Yapital_Model_Datatype_PostalAddress
     */
    protected $_billingAddress = null;

    /**
     * The total price of items. Calculated automatically by Yapital.
     *
     * @var float
     */
    protected $_price = null;

    protected $_currency = null;

    /**
     * This field can be used by a Web shop to store its custom data, e.g. items description.
     *
     * @var Codex_Yapital_Model_Datatype_MerchantItem
     */
    protected $_merchantItems = null;

    /**
     * Flight data for card payments.
     *
     * @var array
     */
    protected $_airlineData = array();

    /**
     * The array of Items put into the basket.
     *
     * @var array
     */
    protected $_items = array();

    /**
     * @return array
     */
    public function getAirlineData ()
    {

        return $this->_airlineData;
    }

    /**
     * @param \Codex_Yapital_Model_Datatype_YapitalPublicId $basketId
     */
    public function setBasketId ( $basketId )
    {

        $this->_basketId = $basketId;

        return $this;
    }

    /**
     * @return \Codex_Yapital_Model_Datatype_YapitalPublicId
     */
    public function getBasketId ()
    {

        return $this->_basketId;
    }

    /**
     * @param \Codex_Yapital_Model_Datatype_PostalAddress $billingAddress
     */
    public function setBillingAddress ( $billingAddress )
    {

        $this->_billingAddress = $billingAddress;

        return $this;
    }

    /**
     * @return \Codex_Yapital_Model_Datatype_PostalAddress
     */
    public function getBillingAddress ()
    {

        return $this->_billingAddress;
    }

    public function setCurrency ( $currency )
    {

        $this->_currency = $currency;

        return $this;
    }

    /**
     * @return string
     */
    public function getCurrency ()
    {

        return (string) $this->_currency;
    }

    /**
     * @return array
     */
    public function getItems ()
    {

        return $this->_items;
    }

    /**
     * @param \Codex_Yapital_Model_Datatype_MerchantItem $merchantItems
     */
    public function setMerchantItems ( $merchantItems )
    {

        $this->_merchantItems = $merchantItems;

        return $this;
    }

    /**
     * @return \Codex_Yapital_Model_Datatype_MerchantItem
     */
    public function getMerchantItems ()
    {

        return $this->_merchantItems;
    }

    /**
     * @param float $price
     */
    public function setPrice ( $price )
    {

        $this->_price = $price;

        return $this;
    }

    /**
     * @return float
     */
    public function getPrice ()
    {

        return (float) $this->_price;
    }

    /**
     * @param \Codex_Yapital_Model_Datatype_PostalAddress $shippingAddress
     */
    public function setShippingAddress ( $shippingAddress )
    {

        $this->_shippingAddress = $shippingAddress;

        return $this;
    }

    /**
     * @return \Codex_Yapital_Model_Datatype_PostalAddress
     */
    public function getShippingAddress ()
    {

        return $this->_shippingAddress;
    }

    /**
     * @param \Codex_Yapital_Model_Datatype_Transaction $transaction
     */
    public function setTransaction ( $transaction )
    {

        $this->_transaction = $transaction;

        return $this;
    }

    /**
     * @return \Codex_Yapital_Model_Datatype_Transaction
     */
    public function getTransaction ()
    {

        return $this->_transaction;
    }


    public function addAirlineData ( Codex_Yapital_Model_Datatype_AirlineData $airlineData )
    {

        $this->_airlineData = $airlineData;

        return $this;
    }

    public function addItem ( $item )
    {

        $this->_items[] = $item;

        return $this;
    }


    /**
     *
     * @param $order Mage_Sales_Model_Order
     *
     * @return Codex_Yapital_Model_Datatype_Basket
     */
    function importOrder ( Mage_Sales_Model_Order $order )
    {
        /** @var $yapitalBilling Codex_Yapital_Model_Datatype_PostalAddress */
        $yapitalBilling = Mage::getModel("yapital/datatype_postaladdress");
        $yapitalBilling->importOrderAddress($order->getBillingAddress());

        /** @var $yapitalShipping Codex_Yapital_Model_Datatype_PostalAddress */
        $yapitalShipping = Mage::getModel("yapital/datatype_postaladdress");
        $yapitalShipping->importOrderAddress($order->getShippingAddress());

        $this->setShippingAddress($yapitalShipping);
        $this->setBillingAddress($yapitalBilling);

        $this->setPrice($order->getGrandTotal());
        $this->setCurrency($order->getBaseCurrency()->getCode());

        // Extract items for cart
        $items = $order->getAllVisibleItems();
        foreach ( $items as $item )
        {
            /**
             * Generate new item for cart
             *
             * @var $yapitalItem Codex_Yapital_Model_Datatype_Item
             */
            $yapitalItem = Mage::getModel(
                "yapital/datatype_item"
            );

            // import mage data and add to cart
            $yapitalItem->importItem($item);
            $this->addItem(clone $yapitalItem);

        }

        /**
         * Generate shipping as item
         *
         * @var $deliveryItem Codex_Yapital_Model_Datatype_Item
         */
        $deliveryItem = Mage::getModel("yapital/datatype_item");
        $deliveryItem->setShopItemId($order->getShippingAddressId());
        $deliveryItem->setItemTitle($order->getShippingDescription());
        $deliveryItem->setItemMinAge(0);

        $deliveryItem->setQuantity(1);
        $deliveryItem->setItemPrice($order->getShippingInclTax());
        $deliveryItem->setItemTaxAmountIncluded($order->getShippingInclTax());
        $deliveryItem->setTotalItemPrice($order->getShippingInclTax());
        $deliveryItem->setTotalItemTaxIncluded($order->getShippingInclTax());
        $deliveryItem->setItemId($order->getShippingAddressId()); // @todo proper id
        $this->addItem($deliveryItem);

        return $this;
    }

    function getData ()
    {
        return array(
            //"basket_id"        => $this->getBasketId(),
            "items"            => $this->getItems(),
            //"transaction"      => $this->getTransaction(),
            "shipping_address" => $this->getShippingAddress(),
            "billing_address"  => $this->getBillingAddress(),
            "price"            => $this->getPrice(),
            "airline_data"     => $this->getAirlineData(),
            "merchant_items"   => $this->getMerchantItems(),
            "currency"         => $this->getCurrency(),
        );
    }
}
